services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./:/var/www/html
    depends_on:
      - web
    restart: always
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 5s
      timeout: 3s
      retries: 2
    networks:
      - app-network

  web:
    build: .
    volumes:
      - ./:/var/www/html
    depends_on:
      - user-db
      - product-db
      - order-db
      - content-db
    restart: always
    environment:
      - PHP_FPM_PM=dynamic
      - PHP_FPM_PM_MAX_CHILDREN=10
      - PHP_FPM_PM_START_SERVERS=4
      - PHP_FPM_PM_MIN_SPARE_SERVERS=2
      - PHP_FPM_PM_MAX_SPARE_SERVERS=6
      - PHP_OPCACHE_ENABLE=1
      - PHP_OPCACHE_MEMORY_CONSUMPTION=128
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      interval: 5s
      timeout: 3s
      retries: 2
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOSTS: user-db,product-db,order-db,content-db
      PMA_USER: root
      PMA_PASSWORD: root
    depends_on:
      - user-db
      - product-db
      - order-db
      - content-db
    networks:
      - app-network

  user-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_service
    volumes:
      - user_db_data:/var/lib/mysql
      - ./database/user_service.sql:/docker-entrypoint-initdb.d/user_service.sql
    ports:
      - "3306:3306"
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 3
    command: >
      --default-authentication-plugin=mysql_native_password
      --skip-name-resolve
      --innodb_buffer_pool_size=256M
      --max_connections=50
      --connect_timeout=5
    networks:
      - app-network

  product-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: product_service
    volumes:
      - product_db_data:/var/lib/mysql
      - ./database/product_service.sql:/docker-entrypoint-initdb.d/product_service.sql
    ports:
      - "3307:3306"
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 3
    command: >
      --default-authentication-plugin=mysql_native_password
      --skip-name-resolve
      --innodb_buffer_pool_size=256M
      --max_connections=50
      --connect_timeout=5
    networks:
      - app-network

  order-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: order_service
    volumes:
      - order_db_data:/var/lib/mysql
      - ./database/order_service.sql:/docker-entrypoint-initdb.d/order_service.sql
    ports:
      - "3308:3306"
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 3
    command: >
      --default-authentication-plugin=mysql_native_password
      --skip-name-resolve
      --innodb_buffer_pool_size=256M
      --max_connections=50
      --connect_timeout=5
    networks:
      - app-network

  content-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: content_service
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - content_db_data:/var/lib/mysql
      - ./database/content_service.sql:/docker-entrypoint-initdb.d/content_service.sql
    ports:
      - "3309:3306"
    command: >
      --default-authentication-plugin=mysql_native_password
      --authentication-policy=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test:
        ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - app-network

networks:
  app-network:
    name: restaurant_network
    driver: bridge

volumes:
  user_db_data:
  product_db_data:
  order_db_data:
  content_db_data:
